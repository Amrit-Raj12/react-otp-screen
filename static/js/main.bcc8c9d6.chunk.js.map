{"version":3,"sources":["components/OtpScreen.js","App.js","reportWebVitals.js","index.js"],"names":["OtpScreen","useState","Array","fill","otp","setOtp","handleKeyPress","event","target","id","which","console","log","document","getElementById","focus","e","parseInt","value","className","map","data","index","type","name","maxLength","onChange","element","isNaN","d","idx","nextSibling","handleChange","onFocus","select","onKeyDown","href","join","onClick","v","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAkGeA,EAhGG,WACd,MAAmBC,mBAAS,IAAIC,MAAM,GAAGC,KAAK,KAA9C,mBAAMC,EAAN,KAAWC,EAAX,KAcD,SAASC,EAAeC,GACpB,GAAGA,EAAMC,OAAOC,GAAG,GAAmB,KAAdF,EAAMG,MAC7BC,QAAQC,IAAIL,EAAMC,OAAOC,GAAG,GAC5BI,SAASC,eAAeP,EAAMC,OAAOC,GAAG,GAAGM,aACrC,GAAGR,EAAMC,OAAOC,GAAG,GAAmB,KAAdF,EAAMG,MAAW,CAC3C,IAAIM,EAAEC,SAASV,EAAMC,OAAOC,IAAI,EAChCE,QAAQC,IAAII,GACZH,SAASC,eAAeE,GAAGD,aACtBR,EAAMC,OAAOC,GAAG,GAAmB,IAAdF,EAAMG,QACpCC,QAAQC,IAAIL,EAAMC,OAAOC,GAAG,GACzBF,EAAMC,OAAOC,KAChBI,SAASC,eAAeP,EAAMC,OAAOC,IAAIS,MAAM,IAC/CL,SAASC,eAAeP,EAAMC,OAAOC,GAAG,GAAGM,QAE3CF,SAASC,eAAeP,EAAMC,OAAOC,GAAG,GAAGS,MAAM,IAIrD,OACI,qBAAKC,UAAU,MAAf,SACA,sBAAKA,UAAU,kBAAf,UACI,oDACA,uBACA,+EAGCf,EAAIgB,KAAI,SAACC,EAAMC,GAEX,IAAIb,EAAGa,EAAM,EACd,OAEE,mCAEE,uBACIH,UAAU,YACVI,KAAK,OACLC,KAAK,MACLC,UAAU,IAEVP,MAAOG,EACPK,SAAU,SAAAV,GAAC,OApDX,SAACW,EAASL,GAC1B,GAAGM,MAAMD,EAAQT,OAAQ,OAAO,EAEhCb,EAAO,YAAID,EAAIgB,KAAI,SAACS,EAAGC,GAAJ,OAAWA,IAAMR,EAAOK,EAAQT,MAAMW,OAGtDF,EAAQI,aACPJ,EAAQI,YAAYhB,QA6COiB,CAAahB,EAAER,OAAQc,IACtCW,QAAS,SAAAjB,GAAC,OAAIA,EAAER,OAAO0B,UACvBC,UAAW7B,EACXG,GAAIA,GALCa,QAajB,uBAAK,uBACL,sBAAKH,UAAU,QAAf,UACI,mBAAGiB,KAAK,IAAR,2BACA,mBAAGA,KAAK,IAAIjB,UAAU,KAAtB,2BAGJ,uBACA,+CAAkBf,EAAIiC,KAAK,OAC3B,8BACI,wBACIlB,UAAU,yBACVmB,QAAS,SAAAtB,GAAC,OAAIX,EAAO,YAAID,EAAIgB,KAAI,SAAAmB,GAAC,MAAI,SAF1C,mBADJ,eAQI,wBACIpB,UAAU,kBACVmB,QAAS,SAAAtB,GAAC,OACNwB,MAAM,kBAAoBpC,EAAIiC,KAAK,MAH3C,0CC3EDI,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASC,eAAe,SAM1B4B,M","file":"static/js/main.bcc8c9d6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst OtpScreen = () => {\r\n    const[otp, setOtp]=useState(new Array(6).fill(\"\"));\r\n\r\n    const handleChange=((element, index)=>{\r\n        if(isNaN(element.value)) return false;\r\n\r\n        setOtp([...otp.map((d, idx)=>(idx===index)?element.value:d)]);\r\n\r\n        // Focus next input\r\n        if(element.nextSibling){\r\n            element.nextSibling.focus();\r\n        }\r\n    });\r\n\r\n    // Delete and navigate\r\n   function handleKeyPress(event){\r\n       if(event.target.id>1 && event.which===37){\r\n        console.log(event.target.id-1)\r\n        document.getElementById(event.target.id-1).focus();\r\n       } else if(event.target.id<6 && event.which===39){\r\n            let e=parseInt(event.target.id)+1;\r\n            console.log(e)\r\n            document.getElementById(e).focus();\r\n       } else if(event.target.id>1 && event.which===8){\r\n        console.log(event.target.id-1)\r\n        if(event.target.id)\r\n        document.getElementById(event.target.id).value=\"\";\r\n        document.getElementById(event.target.id-1).focus();\r\n        \r\n        document.getElementById(event.target.id-1).value=\"\";\r\n        \r\n       }\r\n   }\r\n    return (\r\n        <div className=\"row\">\r\n        <div className=\"col text-center\">\r\n            <h2>Phone Varification</h2>\r\n            <hr/>\r\n            <p>Enter the OTP you received on +91 XX-XXXX-XXXX</p>\r\n            \r\n            \r\n            {otp.map((data, index) => {\r\n                \r\n                 let id=index+1;\r\n                return (\r\n\r\n                  <>\r\n                  \r\n                    <input\r\n                        className=\"otp-field\"\r\n                        type=\"text\"\r\n                        name=\"otp\"\r\n                        maxLength=\"1\"\r\n                        key={index}\r\n                        value={data}\r\n                        onChange={e => handleChange(e.target, index)}\r\n                        onFocus={e => e.target.select()}      \r\n                        onKeyDown={handleKeyPress}\r\n                        id={id}\r\n                    />\r\n                    \r\n                    </>\r\n                );\r\n              \r\n            })}\r\n            \r\n            <br/><br/>\r\n            <div className=\"ch-rd\">\r\n                <a href=\"/\">Change Number</a>\r\n                <a href=\"/\" className=\"rd\">Resend OTP</a>\r\n            </div>\r\n\r\n            <br/>\r\n            <p>OTP Entered - {otp.join(\"\")}</p>\r\n            <p>\r\n                <button\r\n                    className=\"btn btn-secondary mr-2\"\r\n                    onClick={e => setOtp([...otp.map(v => \"\")])}\r\n                >\r\n                    Clear\r\n                </button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={e =>\r\n                        alert(\"Entered OTP is \" + otp.join(\"\"))\r\n                    }\r\n                >\r\n                    Verify Phone Number\r\n                </button>\r\n            </p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default OtpScreen\r\n","import './App.css';\nimport OtpScreen from './components/OtpScreen';\n\nfunction App() {\n  return (\n    <OtpScreen />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}